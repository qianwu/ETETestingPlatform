buildscript {
    ext {
        set('lombokVersion', '1.18.20')
        set('jasopath', '2.4.0')
        set('guava', '30.1-jre')
        set('jackson', '2.10.0')
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }

    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.3.12.RELEASE'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.21.0'
    }
}

allprojects {
    group 'org.charlotte'
    version '1.0'


    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'com.jfrog.artifactory'

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/spring/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        //Ali Nacos
        implementation "org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3"
        implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config:2021.1"

        compileOnly 'javax.annotation:jsr250-api:1.0'
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {
        imports {
            mavenBom('org.springframework.boot:spring-boot-dependencies:2.3.12.RELEASE')
            mavenBom('org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR10')
        }

        dependencies {
            dependency("com.jayway.jsonpath:json-path:${jasopath}")
            dependency("com.google.guava:guava:${guava}")
            dependency("com.fasterxml.jackson.core:jackson-databind:${jackson}")
            dependency("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson}")

        }
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        options.encoding("UTF-8")
    }

    test {
        useJUnitPlatform()
    }
}